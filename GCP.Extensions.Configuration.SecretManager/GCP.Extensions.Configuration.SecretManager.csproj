<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <Version>3.1.0</Version>
    <Authors>Larry Finlay</Authors>
    <Description># GCP.Extensions.Configuration.SecretManager

Configuration provider for Microsoft.Extensions.Configuration framework.

See https://cloud.google.com/secret-manager/docs/reference/libraries on how to create application credential file.

When running outside cloud:
 - Set Environment variable GOOGLE_APPLICATION_CREDENTIALS to enable `GoogleCredential.GetApplicationDefault()`.
 - Build GoogleCredential in code with `GoogleCredential.GetApplicationDefault()`, from file, or from JSON.

Set ProjectId value to over-ride value from GoogleCredential, inside or outside of cloud.

---
```
// typical usage:
//   GoogleCredential will be created as GoogleCredential.GetApplicationDefault()
//   ProjectId will be derived from GoogleCredential
public static IHostBuilder CreateHostBuilder(string[] args) =&gt;
    Host.CreateDefaultBuilder(args)
        .ConfigureAppConfiguration((hostContext, builder) =&gt; {

        // filter rules: https://cloud.google.com/secret-manager/docs/filtering
            builder.AddGcpJsonSecrets("name:servicename_appsettings_");

        // prefix will filter list, then be stripped from key names.
            builder.AddGcpKeyValueSecrets("servicename_keys_");
        })
        .ConfigureWebHostDefaults(webBuilder =&gt;
        {
            webBuilder.UseStartup&lt;Startup&gt;();
        });

```
---
```
// build credential from existing configuration settings:
//   ProjectId will be derived from GoogleCredential
public static IHostBuilder CreateHostBuilder(string[] args) =&gt;
    Host.CreateDefaultBuilder(args)
        .ConfigureAppConfiguration((hostContext, builder) =&gt; {

        var tempConfig = builder.Build();
        var googleCredential = getGoogleCredentialFromConfig(tempConfig);

        // filter rules: https://cloud.google.com/secret-manager/docs/filtering
            builder.AddGcpJsonSecrets("name:servicename_appsettings_", googleCredential);

        // prefix will filter list, then be stripped from key names.
            builder.AddGcpKeyValueSecrets("servicename_keys_", googleCredential);
        })
        .ConfigureWebHostDefaults(webBuilder =&gt;
        {
            webBuilder.UseStartup&lt;Startup&gt;();
        });

```
</Description>
    <PackageProjectUrl>https://github.com/dustmybroom62/GCP.Extensions.Configuration.SecretManager</PackageProjectUrl>
    <RepositoryUrl>https://github.com/dustmybroom62/GCP.Extensions.Configuration.SecretManager</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>GCP Google Cloud Secret SecretManager Configuration Extensions</PackageTags>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Google.Cloud.SecretManager.V1" Version="1.7.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.21" />
  </ItemGroup>

</Project>
